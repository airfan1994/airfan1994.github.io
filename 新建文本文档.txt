import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;


public class CDSA {
	HashMap<Integer,HashMap<Integer,HashMap<Integer,Integer>>> alldata = new HashMap<Integer,HashMap<Integer,HashMap<Integer,Integer>>>();    //:<day,<hour,<pos,count>>>
	int train_startpoint = 92100;//数据集所具有的数据的第一周的数据的结束
	int train_endpoint = 102423;
	int test_endpoint = 102500;
	int test_startpoint = 103123;
	public static void main(String[] args) throws IOException{
		CDSA cdsa = new CDSA();
		cdsa.run();
	}
	public void run() throws IOException{
		
		BufferedReader	r1=new BufferedReader(new FileReader("total.csv"));
		FileWriter wr1 = new FileWriter("train.csv");
		FileWriter wr2 = new FileWriter("label.csv");
		FileWriter wr3 = new FileWriter("test.csv");
		
		String s1 = r1.readLine();
		while(s1!=null){
			String[] lines = s1.split("\t");
			int id = Integer.parseInt(lines[0]);
			int day = id/100;
			int hour = id%100;
			int pos = Integer.parseInt(lines[1]);
			int count = Integer.parseInt(lines[2]);
			
			if(alldata.get(day)!=null){
				alldata.get(day).get(hour).put(pos,count);
			}
			else{
				HashMap<Integer,HashMap<Integer,Integer>> thisday = new HashMap<Integer,HashMap<Integer,Integer>>();
				for(int i=0;i<=23;i++)
				{
					HashMap<Integer,Integer> thishour= new HashMap<Integer,Integer>();
					for(int t=1;t<=36;t++)
					{
						thishour.put(t,0);
					}
					thisday.put(i, thishour);
				}
				alldata.put(day,thisday);
				alldata.get(day).get(hour).put(pos,count);
			}
			
			s1=r1.readLine();
		}
		r1.close();
		
		for(int i=train_startpoint;i<=train_endpoint;i=getnexthour(i))
		{
			int day = i/100;
			int hour = i%100;
			for(int pos=1;pos<=36;pos++){
				String result = "";
				int id = i*100+pos;
				int tf = get(i,pos);
				try{
				int tfp = get(getprevioushour(i),pos);
				int tfn = get(getnexthour(i),pos);
				int tfpw = get(getpreviousweekhour(i),pos);  //previou week previous hour
				int tfpwp = get(getprevioushour(getpreviousweekhour(i)),pos);
				int tfpwn = get(getnexthour(getpreviousweekhour(i)),pos);
				int tg = get(getpreviousdayhour(i),pos);
				result =result+id+",";
				result =result+tf+",";
				result =result+tfp+",";
				result =result+tfn+",";
				result =result+tfpw+",";
				result =result+tfpwp+",";
				result =result+tfpwn+",";
				result =result+tg+",";
				}
				catch(Exception e){
					System.out.println("ssss1");
				}
				finally{
					System.out.println("ssss1");
				}
				
				
				try {
				int tfs = 0;
				int tfd = 0;
				for(int t=0;t<24;t++){
					tfs += alldata.get(day).get(t).get(pos);
				}
				for(int t=1;t<=36;t++){
					tfd += alldata.get(day).get(hour).get(t);
				}
				
				
				int tfps = 0;
				int tfpd = 0;
				
				int pday = getprevioushour(i)/100;
				int phour = getprevioushour(i)%100;
				for(int t=0;t<24;t++){
					tfs += alldata.get(pday).get(t).get(pos);
				}
				for(int t=1;t<=36;t++){
					tfd += alldata.get(pday).get(phour).get(t);
				}
				
				
				result =result+tfs+",";
				result =result+tfd+",";
				result =result+tfps+",";
				result =result+tfpd;
				
				
				for(int t = 0;t<24;t++)
					result=result+","+alldata.get(day).get(t).get(pos);
				for(int t = 1;t<=36;t++)
					result=result+","+alldata.get(day).get(hour).get(t);
				for(int t = 0;t<24;t++)
					result=result+","+alldata.get(pday).get(t).get(pos);
				for(int t = 1;t<=36;t++)
					result=result+","+alldata.get(pday).get(hour).get(t);
				for(int t = 0;t<24;t++)
					result=result+","+get(getpreviousdayhour(day*100+t),pos);
				for(int t = 1;t<=36;t++)
					result=result+","+get(getpreviousdayhour(i),t);}
				catch(Exception e){
					System.out.println("ssss2");
				}
				finally{
					System.out.println("ssss2");
				}
				result+="\n";
				String label= get(getnextweekhour(i),pos)+"\n";
				wr1.write(result);
				wr2.write(label);
			}
		}
		
		
		
		for(int i=test_startpoint;i<=test_endpoint;i=getnexthour(i))
		{
			int day = i/100;
			int hour = i%100;
			for(int pos=1;pos<=36;pos++){
				String result = "";
				int id = i*100+pos;
				
				int tf = get(i,pos);
				int tfp = get(getprevioushour(i),pos);
				int tfn = get(getnexthour(i),pos);
				int tfpw = get(getpreviousweekhour(i),pos);  //previou week previous hour
				int tfpwp = get(getprevioushour(getpreviousweekhour(i)),pos);
				int tfpwn = get(getnexthour(getpreviousweekhour(i)),pos);
				int tg = get(getpreviousdayhour(i),pos);
				result =result+id+",";
				result =result+tf+",";
				result =result+tfp+",";
				result =result+tfn+",";
				result =result+tfpw+",";
				result =result+tfpwp+",";
				result =result+tfpwn+",";
				result =result+tg+",";
				int tfs = 0;
				int tfd = 0;
				for(int t=0;t<24;t++){
					tfs += alldata.get(day).get(t).get(pos);
				}
				for(int t=1;t<=36;t++){
					tfd += alldata.get(day).get(hour).get(t);
				}
				int tfps = 0;
				int tfpd = 0;
				
				int pday = getprevioushour(i)/100;
				int phour = getprevioushour(i)%100;
				for(int t=0;t<24;t++){
					tfs += alldata.get(pday).get(t).get(pos);
				}
				for(int t=1;t<=36;t++){
					tfd += alldata.get(pday).get(phour).get(t);
				}
				result =result+tfs+",";
				result =result+tfd+",";
				result =result+tfps+",";
				result =result+tfpd;
				for(int t = 0;t<24;t++)
					result=result+","+alldata.get(day).get(t).get(pos);
				for(int t = 1;t<=36;t++)
					result=result+","+alldata.get(day).get(hour).get(t);
				for(int t = 0;t<24;t++)
					result=result+","+alldata.get(pday).get(t).get(pos);
				for(int t = 1;t<=36;t++)
					result=result+","+alldata.get(pday).get(hour).get(t);
				for(int t = 0;t<24;t++)
					result=result+","+get(getpreviousdayhour(day*100+t),pos);
				for(int t = 1;t<=36;t++)
					result=result+","+get(getpreviousdayhour(i),t);
				result+="\n";
				wr3.write(result);
			}
		}
		
		
		wr1.close();
		wr2.close();
		wr3.close();
	}
	public int get(int i,int pos){
		int day = i/100;
		int hour = i%100;
		System.out.println(i*100+pos);
		return alldata.get(day).get(hour).get(pos);
	}
	public int getnexthour(int i){
		int day = i/100;
		int hour = i%100;
		if(hour<23) return 100*day+hour+1;
		else
		{
			if(day==930)
				return 100800;
			else if(day==1031)
				return 110100;
			else if(day==1130)
				return 120100;
			else
				return (day+1)*100;
		}

	}
	public int getprevioushour(int i){
		int day = i/100;
		int hour = i%100;
		if(hour>0) return 100*day+hour-1;
		else
		{
			if(day==1008)
				return 93023;
			else if(day==1101)
				return 103123;
			else if(day==1201)
				return 113023;
			else
				return (day-1)*100+23;
		}
	}
	public int getnextweekhour(int i){
		int day = i/100;
		int hour = i%100;
		if(day>=924&&day<=930)
			return (1008+i-924)*100+hour;
		else if(day>=1025&&day<=1031)
			return (1101+i-1025)*100+hour;
		else if(day>=1124&&day<=1130)
			return (1201+i-1124)*100+hour;
		else
			return (day+7)*100+hour;
	}
	public int getpreviousweekhour(int i){
		int day = i/100;
		int hour = i%100;
		if(day>=1008&&day<=1014)
			return (924+i-1008)*100+hour;
		else if(day>=1101&&day<=1107)
			return (1025+i-1101)*100+hour;
		else if(day>=1201&&day<=1207)
			return (1124+i-1201)*100+hour;
		else
			return (day-7)*100+hour;
	}
	public int getpreviousdayhour(int i){  //不乘除时加上一天的，乘除时，加上一个即可
		int day = i/100;
		int hour = i%100;
		if(day==1008)
			return 93000+hour;
		else if(day==1101)
			return 103100+hour;
		else if(day==1201)
			return 113000+hour;
		else
			return (day-1)*100+hour;
	}
}
